version: '3'
services:
  flow-angular-app:
    build:
      context: ../.
      dockerfile: Dockerfile-front
    ports:
      - 8090:80
    depends_on:
      - proxy-traefik
    networks:
      - intra
      - web
    labels:
      traefik.enable: true
      traefik.frontend.rule: Host:app.flow.docker.localhost

  flow-nestjs-server:
    build:
      context: ../.
      dockerfile: Dockerfile-server
    environment:
      - IS_AUTH_ENABLED=false
      - API_PORT=3030
      - API_HOST=localhost
      - APP_URL=
      - LOG_LEVEL=info
      - DATABASE_URL=postgres://flow:mappingpasswd@flow-postgresql:5432/flow
      - JWT_SECRET=bananana
      - SEARCH_APP_ID=JVZSIZ0C3W
      - SEARCH_APP_ADMIN_KEY=07891af69c2c4ac9db4f4b85b5d887d0
    ports:
      - 3030:3030
    depends_on:
      - flow-postgresql
      - proxy-traefik
    networks:
      - intra
      - web
    labels:
      traefik.enable: true
      traefik.frontend.rule: Host:api.flow.docker.localhost

  flow-postgresql:
    image: postgres:9.6.5
    # volumes:
    #     - ~/volumes/flow/postgresql/:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=flow
      - POSTGRES_PASSWORD=mappingpasswd
    ports:
      - 5432:5432
    networks:
      - intra
    labels:
      traefik.enable: false

  proxy-traefik:
    image: traefik
    ports:
      - '80:80'
      - '443:443'
      - '8080:8080'
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./traefik/traefik.toml:/etc/traefik/traefik.toml
      - ./traefik/acme.json:/etc/traefik/acme.json
    networks:
      - web
      - intra
    labels:
      traefik.enable: true
      traefik.backend: traefik
      traefik.frontend.rule: Host:traefik.docker.localhost
      traefik.port: 8080

  prometheus:
    image: prom/prometheus:v2.1.0
    volumes:
      - ./prometheus/:/etc/prometheus/
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - 9090:9090
    links:
      - cadvisor:cadvisor
      - alertmanager:alertmanager
    depends_on:
      - cadvisor
    networks:
      - intra
    labels:
      traefik.enable: true
      traefik.frontend.rule: Host:prometheus.docker.localhost
    restart: always

  node-exporter:
    image: prom/node-exporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - --collector.filesystem.ignored-mount-points
      - '^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)'
    ports:
      - 9100:9100
    networks:
      - intra
    restart: always
    labels:
      traefik.enable: true
      traefik.frontend.rule: Host:node-exporter.docker.localhost

  alertmanager:
    image: prom/alertmanager
    ports:
      - 9093:9093
    volumes:
      - ./alertmanager/:/etc/alertmanager/
    networks:
      - intra
    restart: always
    command:
      - '--config.file=/etc/alertmanager/config.yml'
      - '--storage.path=/alertmanager'
    labels:
      traefik.enable: true
      traefik.frontend.rule: Host:alertmanager.docker.localhost

  cadvisor:
    image: google/cadvisor
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    ports:
      - 8099:8080
    networks:
      - intra
    restart: always
    labels:
      traefik.enable: true
      traefik.frontend.rule: Host:cadvisor.docker.localhost

  grafana:
    image: grafana/grafana
    user: '104'
    depends_on:
      - prometheus
    ports:
      - 3000:3000
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning/:/etc/grafana/provisioning/
    env_file:
      - ./grafana/config.monitoring
    networks:
      - intra
      - web
    labels:
      traefik.enable: true
      traefik.frontend.rule: Host:grafana.docker.localhost
      traefik.port: 3000

networks:
  intra:
  web:
    external: true

volumes:
  prometheus_data: {}
  grafana_data: {}
